CREATE TABLE agency (id MEDIUMINT UNSIGNED AUTO_INCREMENT, region_id TINYINT UNSIGNED NOT NULL, name VARCHAR(100) NOT NULL, type ENUM('company', 'bti') DEFAULT 'company' NOT NULL, url VARCHAR(100), address TEXT, phones LONGTEXT, description TEXT, INDEX region_id_idx (region_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog (id INT UNSIGNED AUTO_INCREMENT, title CHAR(100) NOT NULL UNIQUE, user_id INT UNSIGNED UNIQUE NOT NULL, url VARCHAR(30) NOT NULL UNIQUE, status ENUM('active', 'inactive', 'moderate', 'restricted') NOT NULL, INDEX user_id_index_idx (user_id), INDEX status_index_idx (status), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_post (id INT UNSIGNED AUTO_INCREMENT, blog_id INT UNSIGNED, title VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME, lid TEXT, body TEXT NOT NULL, status ENUM('restricted', 'publish', 'not_publish', 'inactive', 'moderate') DEFAULT 'moderate' NOT NULL, title_photo VARCHAR(50), title_photo_source VARCHAR(200), title_photo_source_url VARCHAR(200), theme_id MEDIUMINT UNSIGNED NOT NULL, title_h1 VARCHAR(255), title_seo VARCHAR(255), description VARCHAR(255), keywords VARCHAR(255), INDEX created_at_index_idx (created_at), INDEX blog_id_index_idx (blog_id), INDEX status_index_idx (status), INDEX theme_id_idx (theme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_post_comment (id MEDIUMINT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED NOT NULL, post_id INT UNSIGNED NOT NULL, body TEXT NOT NULL, deleted TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, lft INT, rgt INT, level SMALLINT, INDEX user_id_idx (user_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_post_theme (blog_post_id INT UNSIGNED, theme_id MEDIUMINT UNSIGNED, PRIMARY KEY(blog_post_id, theme_id)) ENGINE = INNODB;
CREATE TABLE claim (id BIGINT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED, user_name VARCHAR(255), user_email VARCHAR(60), lot_id INT UNSIGNED NOT NULL, claim_theme_id INT UNSIGNED NOT NULL, status ENUM('new', 'confirmed', 'not_confirmed', 'on_control', 'need_check', 'fixed') DEFAULT 'new' NOT NULL, body TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX lot_id_idx (lot_id), INDEX user_id_idx (user_id), INDEX claim_theme_id_idx (claim_theme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE claim_theme (id INT UNSIGNED AUTO_INCREMENT, title VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE favourite (lot_id INT UNSIGNED, user_id INT UNSIGNED, PRIMARY KEY(lot_id, user_id)) ENGINE = INNODB;
CREATE TABLE flat (id BIGINT UNSIGNED AUTO_INCREMENT, lot_id BIGINT, rooms BIGINT, common_space BIGINT, living_space BIGINT, kitchen_space BIGINT, floor BIGINT, has_balcony TINYINT(1), has_loggia TINYINT(1), price BIGINT, currency ENUM('rur', 'eur', 'usd'), INDEX lot_id_idx (lot_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE form_field (id SMALLINT AUTO_INCREMENT, type VARCHAR(15), size TINYINT, value TEXT, label VARCHAR(150), comment VARCHAR(150), help VARCHAR(150), rating MEDIUMINT UNSIGNED, xml_name VARCHAR(255), xml_desc TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE form_item (id BIGINT AUTO_INCREMENT, type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), field_id SMALLINT, position SMALLINT, required TINYINT(1), show_additional_header TINYINT(1), UNIQUE INDEX index_idx (type, field_id), INDEX field_id_idx (field_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE geo_ip_ru (start INT UNSIGNED, end INT UNSIGNED, region_id TINYINT UNSIGNED, region VARCHAR(80), city VARCHAR(60), PRIMARY KEY(start, end)) ENGINE = INNODB;
CREATE TABLE import_errors_log (id BIGINT AUTO_INCREMENT, log_id INT UNSIGNED NOT NULL, internal_lot_id BIGINT UNSIGNED, message VARCHAR(255), INDEX log_id_idx (log_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE import_log (id INT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED NOT NULL, file_name VARCHAR(150) NOT NULL, file_type TINYINT NOT NULL, created_at DATETIME NOT NULL, lots SMALLINT UNSIGNED DEFAULT 0 NOT NULL, errors INT UNSIGNED DEFAULT 0 NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE import_order (id INT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED NOT NULL, date_from DATETIME, date_to DATETIME, status ENUM('inactive', 'active') DEFAULT 'inactive', company_name VARCHAR(255), total BIGINT UNSIGNED, info TEXT, created_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE import_order_options (id INT UNSIGNED AUTO_INCREMENT, type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), order_id INT UNSIGNED, status ENUM('inactive', 'active') DEFAULT 'inactive', UNIQUE INDEX index_idx (type, order_id), INDEX import_order_id_idx (import_order_id), INDEX order_id_idx (order_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE import_regions_log (id BIGINT AUTO_INCREMENT, log_id INT UNSIGNED NOT NULL, region_id TINYINT UNSIGNED NOT NULL, lots MEDIUMINT UNSIGNED NOT NULL, INDEX log_id_idx (log_id), INDEX region_id_idx (region_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE import_types_log (id BIGINT AUTO_INCREMENT, log_id INT UNSIGNED NOT NULL, type TINYINT UNSIGNED NOT NULL, lots MEDIUMINT UNSIGNED NOT NULL, INDEX log_id_idx (log_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invite (code VARCHAR(12), email VARCHAR(50), user_id INT UNSIGNED, created_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(code, email)) ENGINE = INNODB;
CREATE TABLE landing_page (id INT UNSIGNED AUTO_INCREMENT, url VARCHAR(255) NOT NULL, h1 VARCHAR(255), title VARCHAR(255), lot_title_prefix VARCHAR(255), description TEXT, keywords TEXT, seo_text TEXT, params LONGTEXT, query TEXT, region_id TINYINT UNSIGNED NOT NULL, type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), INDEX region_id_idx (region_id), INDEX type_idx (type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log (model VARCHAR(15), pk VARCHAR(255), field VARCHAR(25), old TEXT, new TEXT, created_at DATETIME, PRIMARY KEY(model, pk, field, created_at)) ENGINE = INNODB;
CREATE TABLE lot (id INT UNSIGNED AUTO_INCREMENT, type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), user_id INT UNSIGNED, region_id TINYINT UNSIGNED, address1 VARCHAR(255), address2 VARCHAR(255), address_info LONGTEXT, latitude FLOAT(18, 2), longitude FLOAT(18, 2), price BIGINT, currency ENUM('RUR', 'USD', 'EUR'), exchange DECIMAL(6, 4), brief TEXT, description TEXT, auto_description TEXT, images VARCHAR(50), thumb TINYINT, organization_link TEXT, organization_contact_name VARCHAR(150), organization_contact_phone VARCHAR(250), created_at DATETIME, active_till DATETIME, updated_at DATETIME, parsed_at DATETIME, editable TINYINT(1) DEFAULT '1', imported TINYINT(1) DEFAULT '0', internal_id BIGINT UNSIGNED, status ENUM('active', 'inactive', 'restricted', 'moderate', 'not-paid') DEFAULT 'active', rating MEDIUMINT UNSIGNED, moderator_message MEDIUMINT, deleted_at DATETIME, INDEX user_and_internal_id_idx (user_id, internal_id), INDEX internal_id_idx (internal_id), INDEX region_id_idx (region_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lot_info (lot_id INT UNSIGNED, field_id SMALLINT, value TEXT, PRIMARY KEY(lot_id, field_id)) ENGINE = INNODB;
CREATE TABLE lot_statistic (id INT UNSIGNED AUTO_INCREMENT, stat_at DATE NOT NULL, region_id TINYINT UNSIGNED NOT NULL, type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), user_type ENUM('owner', 'company', 'employee', 'realtor', 'source') NOT NULL, active SMALLINT DEFAULT 0 NOT NULL, new SMALLINT DEFAULT 0 NOT NULL, deleted SMALLINT DEFAULT 0 NOT NULL, INDEX stat_at_idx (stat_at), INDEX region_id_idx (region_id), INDEX type_idx (type), INDEX user_type_idx (user_type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lot_view (id INT UNSIGNED AUTO_INCREMENT, lot_id INT UNSIGNED, ip_address VARCHAR(15) NOT NULL, lot_type ENUM('apartament-sale', 'apartament-rent', 'house-sale', 'house-rent', 'commercial-sale', 'commercial-rent', 'new_building-sale'), created_at DATETIME NOT NULL, INDEX lot_id_idx (lot_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE moderator_filters (id MEDIUMINT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED NOT NULL, name VARCHAR(50) NOT NULL, params LONGTEXT, UNIQUE INDEX filter_idx (user_id, name), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notification (email VARCHAR(50), model VARCHAR(15), field VARCHAR(25), pk VARCHAR(255), period ENUM('daily', 'weekly', 'monthly') NOT NULL, PRIMARY KEY(email, model, field, pk)) ENGINE = INNODB;
CREATE TABLE p_m (id MEDIUMINT AUTO_INCREMENT, sender INT UNSIGNED, receiver INT UNSIGNED, subject VARCHAR(200), message TEXT, sent_at DATETIME, answered TINYINT(1), in_answer MEDIUMINT, red TINYINT(1), user_name VARCHAR(50), user_email VARCHAR(60), is_deleted TINYINT UNSIGNED, priority ENUM('none', 'low', 'mid', 'high') DEFAULT 'none' NOT NULL, INDEX sender_idx (sender), INDEX receiver_idx (receiver), INDEX in_answer_idx (in_answer), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page (id SMALLINT AUTO_INCREMENT, url VARCHAR(50), parent_id SMALLINT, in_menu TINYINT(1) DEFAULT '0', position SMALLINT, title VARCHAR(255), name VARCHAR(255), content TEXT, description VARCHAR(255), keywords VARCHAR(255), UNIQUE INDEX index_idx (url), INDEX parent_id_idx (parent_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post (id MEDIUMINT UNSIGNED AUTO_INCREMENT, post_type ENUM('expert_article', 'author_article', 'news', 'events', 'article', 'analytics', 'qa', 'questionnaire') NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME, author_id MEDIUMINT UNSIGNED, user_id INT UNSIGNED, author_name VARCHAR(255), author_email VARCHAR(60), title VARCHAR(255) NOT NULL, rating MEDIUMINT UNSIGNED DEFAULT 0 NOT NULL, post_text TEXT NOT NULL, status ENUM('restricted', 'publish', 'not_publish', 'inactive', 'moderate') DEFAULT 'not_publish' NOT NULL, event_date VARCHAR(255), event_place VARCHAR(255), event_contact VARCHAR(255), section ENUM('Новости рынка', 'Новости компаний', 'Новости портала'), title_photo VARCHAR(50), title_photo_source VARCHAR(200), title_photo_source_url VARCHAR(200), source VARCHAR(200), source_url VARCHAR(200), lid TEXT, subtitle VARCHAR(255), signature VARCHAR(150), less_count SMALLINT DEFAULT 0, is_primary TINYINT(1) DEFAULT '0' NOT NULL, on_main TINYINT(1) DEFAULT '0' NOT NULL, in_yandex_rss TINYINT(1) DEFAULT '0' NOT NULL, in_google_xml TINYINT(1) DEFAULT '0' NOT NULL, in_rambler_rss TINYINT(1) DEFAULT '0' NOT NULL, title_h1 VARCHAR(255), title_seo VARCHAR(255), description VARCHAR(255), keywords VARCHAR(255), deleted_at DATETIME, INDEX title_index_idx (title), INDEX post_type_idx (post_type), INDEX created_at_index_idx (created_at), INDEX rating_index_idx (rating), INDEX author_id_idx (author_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post_author (id MEDIUMINT UNSIGNED AUTO_INCREMENT, name VARCHAR(100), company VARCHAR(100), post VARCHAR(100), photo VARCHAR(20), description TEXT, author_type ENUM('author', 'expert'), deleted_at DATETIME, INDEX author_type_idx (author_type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post_comment (id MEDIUMINT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED, user_name VARCHAR(50), user_email VARCHAR(60), post_id MEDIUMINT UNSIGNED NOT NULL, body TEXT NOT NULL, deleted TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, lft INT, rgt INT, level SMALLINT, INDEX user_id_idx (user_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post_region (post_id MEDIUMINT UNSIGNED, region_id TINYINT UNSIGNED, PRIMARY KEY(post_id, region_id)) ENGINE = INNODB;
CREATE TABLE post_tag (post_id MEDIUMINT UNSIGNED, tag_id MEDIUMINT UNSIGNED, PRIMARY KEY(post_id, tag_id)) ENGINE = INNODB;
CREATE TABLE post_theme (post_id MEDIUMINT UNSIGNED, theme_id MEDIUMINT UNSIGNED, PRIMARY KEY(post_id, theme_id)) ENGINE = INNODB;
CREATE TABLE questionnaire_answers (id MEDIUMINT UNSIGNED AUTO_INCREMENT, post_id MEDIUMINT UNSIGNED NOT NULL, title VARCHAR(255) DEFAULT NULL, vote MEDIUMINT UNSIGNED DEFAULT 0, INDEX title_index_idx (title), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE questionnaire_answers_vote (id BIGINT AUTO_INCREMENT, post_id MEDIUMINT UNSIGNED NOT NULL, answer_id MEDIUMINT UNSIGNED NOT NULL, user_id INT UNSIGNED NOT NULL, INDEX answer_id_idx (answer_id), INDEX post_id_idx (post_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE read_post_comment (user_id INT UNSIGNED, post_id MEDIUMINT UNSIGNED, post_comment_id MEDIUMINT UNSIGNED, PRIMARY KEY(user_id, post_id, post_comment_id)) ENGINE = INNODB;
CREATE TABLE region (id TINYINT UNSIGNED, name VARCHAR(100), latitude FLOAT(18, 2), longitude FLOAT(18, 2), zoom TINYINT UNSIGNED, position TINYINT, description LONGTEXT, in_menu TINYINT(1), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE regionnode (id MEDIUMINT UNSIGNED AUTO_INCREMENT, region_id TINYINT UNSIGNED, name VARCHAR(100), socr VARCHAR(15) NOT NULL, parent MEDIUMINT UNSIGNED, has_children TINYINT(1), has_street TINYINT(1), list TINYINT(1), description LONGTEXT, INDEX parent_idx (parent), INDEX region_id_idx (region_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE search (id SMALLINT UNSIGNED AUTO_INCREMENT, hash VARCHAR(32), param TEXT, UNIQUE INDEX hash_idx (hash), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE seo_texts (id INT UNSIGNED AUTO_INCREMENT, region_id TINYINT UNSIGNED NOT NULL, region_node_id MEDIUMINT UNSIGNED, section TINYINT UNSIGNED NOT NULL, real_estate_type VARCHAR(35), text TEXT, INDEX region_id_idx (region_id), INDEX region_node_id_idx (region_node_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sitemap_seo_data (id INT UNSIGNED AUTO_INCREMENT, h1 TEXT, section VARCHAR(100) NOT NULL, subsection VARCHAR(255), title TEXT, link TEXT, content TEXT, level ENUM('region', 'city', 'village', 'district', 'street'), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE spec_pages (id INT UNSIGNED AUTO_INCREMENT, name VARCHAR(100) NOT NULL, text TEXT, url VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE special_targeting (id INT UNSIGNED AUTO_INCREMENT, name VARCHAR(100) NOT NULL, text TEXT, slug VARCHAR(255), UNIQUE INDEX special_targeting_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sph_counter (type VARCHAR(25), last_updated_at DATETIME, INDEX last_updated_at_idx (last_updated_at), PRIMARY KEY(type)) ENGINE = INNODB;
CREATE TABLE street (id BIGINT UNSIGNED AUTO_INCREMENT, regionnode_id MEDIUMINT UNSIGNED, name VARCHAR(90), socr VARCHAR(15), latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), INDEX geo_idx (latitude, longitude), PRIMARY KEY(id, regionnode_id)) ENGINE = INNODB;
CREATE TABLE tag (id MEDIUMINT UNSIGNED AUTO_INCREMENT, title CHAR(64) NOT NULL UNIQUE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE theme (id MEDIUMINT UNSIGNED AUTO_INCREMENT, title CHAR(64) NOT NULL UNIQUE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user (id INT UNSIGNED AUTO_INCREMENT, group_id SMALLINT UNSIGNED, type ENUM('owner', 'company', 'employee', 'realtor', 'source') NOT NULL, employer_id INT UNSIGNED, email VARCHAR(60) NOT NULL, password VARCHAR(32) NOT NULL, name VARCHAR(100) NOT NULL, company_name VARCHAR(100), phone VARCHAR(18) NOT NULL, created_at DATETIME, last_login DATETIME, remember_key VARCHAR(64), remember_till DATETIME, active_count MEDIUMINT, deleted_count MEDIUMINT, approved TINYINT(1) DEFAULT '0', inactive TINYINT(1) DEFAULT '0' NOT NULL, rating MEDIUMINT UNSIGNED, photo VARCHAR(50), deleted_at DATETIME, INDEX email_index_idx (email), INDEX phone_index_idx (phone), UNIQUE INDEX remember_key_index_idx (remember_key), INDEX employer_id_idx (employer_id), INDEX group_id_idx (group_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_group (id SMALLINT UNSIGNED AUTO_INCREMENT, name VARCHAR(100) NOT NULL UNIQUE, credentials LONGTEXT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_info (user_id INT UNSIGNED, additional_phone VARCHAR(18), about TEXT, specialities TEXT, regions TEXT, experience TEXT, advantage TEXT, site VARCHAR(100), email_confirmation VARCHAR(8), promotion SMALLINT DEFAULT 0, xml_url VARCHAR(255), xml_type ENUM('mesto', 'gde', 'irr', 'mail', 'winner', 'mir', 'dmir') DEFAULT 'mesto' NOT NULL, PRIMARY KEY(user_id)) ENGINE = INNODB;
CREATE TABLE user_region (user_id INT UNSIGNED, region_id TINYINT UNSIGNED, lots_count SMALLINT UNSIGNED DEFAULT 0 NOT NULL, PRIMARY KEY(user_id, region_id)) ENGINE = INNODB;
CREATE TABLE user_reset_key (user_id INT UNSIGNED AUTO_INCREMENT, reset_key VARCHAR(32), PRIMARY KEY(user_id, reset_key)) ENGINE = INNODB;
CREATE TABLE user_settings (user_id INT UNSIGNED, name VARCHAR(30), value TEXT, PRIMARY KEY(user_id, name)) ENGINE = INNODB;
CREATE TABLE user_sources_link (id BIGINT UNSIGNED AUTO_INCREMENT, user_id INT UNSIGNED NOT NULL, url VARCHAR(255) NOT NULL, type TINYINT NOT NULL, file_type TINYINT NOT NULL, status ENUM('active', 'banned', 'restored', 'not-paid') DEFAULT 'active' NOT NULL, frequency TINYINT DEFAULT 24 NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE agency ADD CONSTRAINT agency_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE blog ADD CONSTRAINT blog_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE blog_post ADD CONSTRAINT blog_post_theme_id_theme_id FOREIGN KEY (theme_id) REFERENCES theme(id);
ALTER TABLE blog_post ADD CONSTRAINT blog_post_blog_id_blog_id FOREIGN KEY (blog_id) REFERENCES blog(id) ON DELETE CASCADE;
ALTER TABLE blog_post_comment ADD CONSTRAINT blog_post_comment_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE blog_post_comment ADD CONSTRAINT blog_post_comment_post_id_blog_post_id FOREIGN KEY (post_id) REFERENCES blog_post(id) ON DELETE CASCADE;
ALTER TABLE blog_post_theme ADD CONSTRAINT blog_post_theme_theme_id_theme_id FOREIGN KEY (theme_id) REFERENCES theme(id) ON DELETE CASCADE;
ALTER TABLE blog_post_theme ADD CONSTRAINT blog_post_theme_blog_post_id_blog_post_id FOREIGN KEY (blog_post_id) REFERENCES blog_post(id) ON DELETE CASCADE;
ALTER TABLE claim ADD CONSTRAINT claim_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE claim ADD CONSTRAINT claim_lot_id_lot_id FOREIGN KEY (lot_id) REFERENCES lot(id) ON DELETE CASCADE;
ALTER TABLE claim ADD CONSTRAINT claim_claim_theme_id_claim_theme_id FOREIGN KEY (claim_theme_id) REFERENCES claim_theme(id) ON DELETE CASCADE;
ALTER TABLE favourite ADD CONSTRAINT favourite_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE favourite ADD CONSTRAINT favourite_lot_id_lot_id FOREIGN KEY (lot_id) REFERENCES lot(id);
ALTER TABLE flat ADD CONSTRAINT flat_lot_id_lot_id FOREIGN KEY (lot_id) REFERENCES lot(id) ON DELETE CASCADE;
ALTER TABLE form_item ADD CONSTRAINT form_item_field_id_form_field_id FOREIGN KEY (field_id) REFERENCES form_field(id);
ALTER TABLE import_errors_log ADD CONSTRAINT import_errors_log_log_id_import_log_id FOREIGN KEY (log_id) REFERENCES import_log(id) ON DELETE CASCADE;
ALTER TABLE import_log ADD CONSTRAINT import_log_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE import_order ADD CONSTRAINT import_order_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE import_order_options ADD CONSTRAINT import_order_options_order_id_import_order_id FOREIGN KEY (order_id) REFERENCES import_order(id);
ALTER TABLE import_order_options ADD CONSTRAINT import_order_options_import_order_id_import_order_id FOREIGN KEY (import_order_id) REFERENCES import_order(id) ON DELETE CASCADE;
ALTER TABLE import_regions_log ADD CONSTRAINT import_regions_log_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE;
ALTER TABLE import_regions_log ADD CONSTRAINT import_regions_log_log_id_import_log_id FOREIGN KEY (log_id) REFERENCES import_log(id) ON DELETE CASCADE;
ALTER TABLE import_types_log ADD CONSTRAINT import_types_log_log_id_import_log_id FOREIGN KEY (log_id) REFERENCES import_log(id) ON DELETE CASCADE;
ALTER TABLE invite ADD CONSTRAINT invite_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE landing_page ADD CONSTRAINT landing_page_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE;
ALTER TABLE lot ADD CONSTRAINT lot_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE lot ADD CONSTRAINT lot_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE lot_info ADD CONSTRAINT lot_info_lot_id_lot_id FOREIGN KEY (lot_id) REFERENCES lot(id);
ALTER TABLE lot_info ADD CONSTRAINT lot_info_field_id_form_field_id FOREIGN KEY (field_id) REFERENCES form_field(id);
ALTER TABLE lot_statistic ADD CONSTRAINT lot_statistic_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE;
ALTER TABLE lot_view ADD CONSTRAINT lot_view_lot_id_lot_id FOREIGN KEY (lot_id) REFERENCES lot(id);
ALTER TABLE moderator_filters ADD CONSTRAINT moderator_filters_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE p_m ADD CONSTRAINT p_m_sender_user_id FOREIGN KEY (sender) REFERENCES user(id);
ALTER TABLE p_m ADD CONSTRAINT p_m_receiver_user_id FOREIGN KEY (receiver) REFERENCES user(id);
ALTER TABLE p_m ADD CONSTRAINT p_m_in_answer_p_m_id FOREIGN KEY (in_answer) REFERENCES p_m(id);
ALTER TABLE page ADD CONSTRAINT page_parent_id_page_id FOREIGN KEY (parent_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE post ADD CONSTRAINT post_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE post ADD CONSTRAINT post_author_id_post_author_id FOREIGN KEY (author_id) REFERENCES post_author(id) ON DELETE CASCADE;
ALTER TABLE post_comment ADD CONSTRAINT post_comment_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE post_comment ADD CONSTRAINT post_comment_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE post_region ADD CONSTRAINT post_region_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE post_region ADD CONSTRAINT post_region_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE post_tag ADD CONSTRAINT post_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id);
ALTER TABLE post_tag ADD CONSTRAINT post_tag_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE post_theme ADD CONSTRAINT post_theme_theme_id_theme_id FOREIGN KEY (theme_id) REFERENCES theme(id) ON DELETE CASCADE;
ALTER TABLE post_theme ADD CONSTRAINT post_theme_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE questionnaire_answers ADD CONSTRAINT questionnaire_answers_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE questionnaire_answers_vote ADD CONSTRAINT questionnaire_answers_vote_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE questionnaire_answers_vote ADD CONSTRAINT questionnaire_answers_vote_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE questionnaire_answers_vote ADD CONSTRAINT questionnaire_answers_vote_answer_id_questionnaire_answers_id FOREIGN KEY (answer_id) REFERENCES questionnaire_answers(id) ON DELETE CASCADE;
ALTER TABLE read_post_comment ADD CONSTRAINT read_post_comment_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE read_post_comment ADD CONSTRAINT read_post_comment_post_id_post_id FOREIGN KEY (post_id) REFERENCES post(id) ON DELETE CASCADE;
ALTER TABLE read_post_comment ADD CONSTRAINT read_post_comment_post_comment_id_post_comment_id FOREIGN KEY (post_comment_id) REFERENCES post_comment(id) ON DELETE CASCADE;
ALTER TABLE regionnode ADD CONSTRAINT regionnode_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE regionnode ADD CONSTRAINT regionnode_parent_regionnode_id FOREIGN KEY (parent) REFERENCES regionnode(id);
ALTER TABLE seo_texts ADD CONSTRAINT seo_texts_region_node_id_regionnode_id FOREIGN KEY (region_node_id) REFERENCES regionnode(id) ON DELETE CASCADE;
ALTER TABLE seo_texts ADD CONSTRAINT seo_texts_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE;
ALTER TABLE street ADD CONSTRAINT street_regionnode_id_regionnode_id FOREIGN KEY (regionnode_id) REFERENCES regionnode(id);
ALTER TABLE user ADD CONSTRAINT user_group_id_user_group_id FOREIGN KEY (group_id) REFERENCES user_group(id) ON DELETE SET NULL;
ALTER TABLE user ADD CONSTRAINT user_employer_id_user_id FOREIGN KEY (employer_id) REFERENCES user(id);
ALTER TABLE user_region ADD CONSTRAINT user_region_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE user_region ADD CONSTRAINT user_region_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE;
ALTER TABLE user_settings ADD CONSTRAINT user_settings_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE user_sources_link ADD CONSTRAINT user_sources_link_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
